# Uses GITHUB_OUTPUT and 'outputs:' to store the env var in one job and then read that env var in another job
# WORKED

name: outputs demo

on:
  workflow_dispatch:

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      my_value: ${{ steps.generate.outputs.myvalue }}
    steps:
    - name: Generate value
      id: generate
      run: echo "myvalue=hello" >> $GITHUB_OUTPUT
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - name: Use value
        run: echo ${{ needs.job1.outputs.my_value }}  

# Another similar example
#
# jobs:
#   mainjob1:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Set Variable
#         id: set_var
#         run: |
#           echo "var1=alpha" >> $GITHUB_OUTPUT
#     outputs:
#       varx: ${{ steps.set_var.outputs.var1 }}

#   mainjob2:
#     needs: mainjob1
#     runs-on: ubuntu-latest
#     steps:
#       - name: Access Variable
#         run: |
#           echo "var1=${{ needs.mainjob1.outputs.varx }}"
