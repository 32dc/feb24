name: Tag-diff - demo

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - "*"
  #     - master
  
permissions:
  contents: read

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release-info:
    runs-on: ubuntu-latest
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Get Latest Release
      id: latest_release
      uses: actions/github-script@v4
      with:
        script: |
          const response = await github.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo
          });

          console.log(`Latest Release: ${response.data.tag_name}`);
          echo "::set-env name=LATEST_RELEASE::${response.data.tag_name}";
          echo "LATEST_RELEASE=${response.data.tag_name}" >> $GITHUB_ENV;
          return { result: response.data.tag_name };

    - name: Print Latest Release
      run: echo "Latest Release stored in variable= $LATEST_RELEASE"

    - name: Use Latest Release
      run: echo "Using Latest Release= $LATEST_RELEASE"

    # - name: Print Latest Release
    #   run: echo "Latest Release stored in variable: env.$LATEST_RELEASE"

    - name: Use Latest Release
      run: echo "Using Latest Release: env.$LATEST_RELEASE"
      
    # - name: Get Latest Release
    #   id: latest_release
    #   uses: actions/github-script@v4
    #   with:
    #     script: |
    #       const response = await github.repos.getLatestRelease({
    #         owner: context.repo.owner,
    #         repo: context.repo.repo
    #       });
    #       console.log(`Latest Release: ${response.data.tag_name}`);
    #       return { result: response.data.tag_name };
    #       process.env.LATEST_RELEASE = response.data.tag_name;

    # - name: Print Latest Release
    #   run: echo "Latest Release stored in variable= $LATEST_RELEASE"

  tags-info: 
    runs-on: ubuntu-latest
    outputs:
      current_tag: ${{ steps.get-tags.outputs.current_tag }}
      previous_tag: ${{ steps.get-tags.outputs.previous_tag }}
      # diff_content: ${{ steps.tag-diff.outputs.diff_content }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for tags and history - (important)

      - name: Get Tags
        id: get-tags
        run: |
          echo "Current Tag:"
          current_tag=$(git describe --tags --abbrev=0)
          echo $current_tag
          
          echo "Previous Tag:"
          previous_tag=$(git tag --sort=-v:refname | grep -A1 $current_tag | tail -1)
          # Ensure it's not outputting the current tag as previous (if no previous tag exists)
          if [ "$previous_tag" == "$current_tag" ]; then
            previous_tag=""
          fi
          echo $previous_tag

          echo "current_tag=$current_tag" >> $GITHUB_OUTPUT
          echo "previous_tag=$previous_tag" >> $GITHUB_OUTPUT
      
  tag-diff:
    runs-on: ubuntu-latest
    needs: tags-info
    outputs:
      diff_content: ${{ steps.show-tag-diff.outputs.diff_content }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for tags and history - (important)
    
      - name: show tag diff
        id: show-tag-diff
        run: |
          previous_tag=${{ needs.tags-info.outputs.previous_tag }}
          current_tag=${{ needs.tags-info.outputs.current_tag }}
          echo "previous tag= $previous_tag"
          echo "current tag= $current_tag"
          
          if [ -z "$previous_tag" ] || [ -z "$current_tag" ]; then
            echo "One of the tags is missing; cannot show diff."
            diff_content="No previous tag found to compare."
          else
            echo "else"
            diff_content=$(git diff $previous_tag $current_tag)
            echo "$diff_content"
          fi
          
          # Limit the diff content to avoid exceeding max comment length
          diff_content=${diff_content:0:65000}
          # git diff ${{ steps.tags.outputs.current_tag }}..${{ steps.tags.outputs.previous_tag }}

      # - name: Comment on PR
      # - uses: actions/github-script@v5
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const git = require('simple-git/promise');
      #       const previousTag = $previous_tag;
      #       echo $previous_tag
      #       const currentTag = $current_tag;
      #       echo $current_tag

      #       (async () => {
      #         const repo = git('.');
      #         const diff = await repo.diff({ from: previousTag, to: currentTag });
      #         github.rest.issues.createComment({
      #           issue_number: context.issue.number,
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           body: `**Tag Diff:**\n${diff}`
      #         });
      #       })();

      
      # - name: Comment on PR
      #   uses: actions/github-script@v5
      #   with:
      #     github-token: ${{secrets.GITHUB_TOKEN}}
      #     script: |
      #       const event_name = github.context.eventName;
      #       const pullRequest = event_name === 'pull_request' ? github.context.payload.pull_request : null;
      
      #       if (pullRequest) {
      #         const issue_number = pullRequest.number;
      #         const diff_content = "${diff_content}";
      #         const comment_body = `### Code Differences:\n\`\`\`diff\n${diff_content}\n\`\`\``;
      
      #         github.rest.issues.createComment({
      #           owner: github.context.repo.owner,
      #           repo: github.context.repo.repo,
      #           issue_number: issue_number,
      #           body: comment_body
      #         });
      #       } else {
      #         console.log("Not a pull request event or no payload. Skipping comment.");
      #       }
